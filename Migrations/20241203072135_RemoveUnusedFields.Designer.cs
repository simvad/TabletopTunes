// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernMusicPlayer.Data;

#nullable disable

namespace ModernMusicPlayer.Migrations
{
    [DbContext(typeof(MusicPlayerDbContext))]
    [Migration("20241203072135_RemoveUnusedFields")]
    partial class RemoveUnusedFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ModernMusicPlayer.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ModernMusicPlayer.Entities.TrackEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("ModernMusicPlayer.Entities.TrackTag", b =>
                {
                    b.Property<string>("TrackId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TrackId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TrackTags");
                });

            modelBuilder.Entity("ModernMusicPlayer.Entities.TrackTag", b =>
                {
                    b.HasOne("ModernMusicPlayer.Entities.Tag", "Tag")
                        .WithMany("TrackTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernMusicPlayer.Entities.TrackEntity", "Track")
                        .WithMany("TrackTags")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("ModernMusicPlayer.Entities.Tag", b =>
                {
                    b.Navigation("TrackTags");
                });

            modelBuilder.Entity("ModernMusicPlayer.Entities.TrackEntity", b =>
                {
                    b.Navigation("TrackTags");
                });
#pragma warning restore 612, 618
        }
    }
}
